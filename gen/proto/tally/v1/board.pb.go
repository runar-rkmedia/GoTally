// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: proto/tally/v1/board.proto

package tallyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Direction for swipe, e.g. the direction one wants to move all the cells into
type SwipeDirection int32

const (
	// null
	SwipeDirection_SWIPE_DIRECTION_UNSPECIFIED SwipeDirection = 0
	// Swipe up
	SwipeDirection_SWIPE_DIRECTION_UP SwipeDirection = 1
	// Swipe right
	SwipeDirection_SWIPE_DIRECTION_RIGHT SwipeDirection = 2
	// Swipe down
	SwipeDirection_SWIPE_DIRECTION_DOWN SwipeDirection = 3
	// Swipe left
	SwipeDirection_SWIPE_DIRECTION_LEFT SwipeDirection = 4
)

// Enum value maps for SwipeDirection.
var (
	SwipeDirection_name = map[int32]string{
		0: "SWIPE_DIRECTION_UNSPECIFIED",
		1: "SWIPE_DIRECTION_UP",
		2: "SWIPE_DIRECTION_RIGHT",
		3: "SWIPE_DIRECTION_DOWN",
		4: "SWIPE_DIRECTION_LEFT",
	}
	SwipeDirection_value = map[string]int32{
		"SWIPE_DIRECTION_UNSPECIFIED": 0,
		"SWIPE_DIRECTION_UP":          1,
		"SWIPE_DIRECTION_RIGHT":       2,
		"SWIPE_DIRECTION_DOWN":        3,
		"SWIPE_DIRECTION_LEFT":        4,
	}
)

func (x SwipeDirection) Enum() *SwipeDirection {
	p := new(SwipeDirection)
	*p = x
	return p
}

func (x SwipeDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwipeDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tally_v1_board_proto_enumTypes[0].Descriptor()
}

func (SwipeDirection) Type() protoreflect.EnumType {
	return &file_proto_tally_v1_board_proto_enumTypes[0]
}

func (x SwipeDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwipeDirection.Descriptor instead.
func (SwipeDirection) EnumDescriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{0}
}

type GameMode int32

const (
	GameMode_GAME_MODE_UNSPECIFIED GameMode = 0
	// Cells are generated randomly at start, and each swipe adds another cell to
	// the board.
	GameMode_GAME_MODE_RANDOM GameMode = 1
	// Tutorial-like. Can be indexed to start at a specific board.
	GameMode_GAME_MODE_TUTORIAL         GameMode = 2
	GameMode_GAME_MODE_RANDOM_CHALLENGE GameMode = 3
)

// Enum value maps for GameMode.
var (
	GameMode_name = map[int32]string{
		0: "GAME_MODE_UNSPECIFIED",
		1: "GAME_MODE_RANDOM",
		2: "GAME_MODE_TUTORIAL",
		3: "GAME_MODE_RANDOM_CHALLENGE",
	}
	GameMode_value = map[string]int32{
		"GAME_MODE_UNSPECIFIED":      0,
		"GAME_MODE_RANDOM":           1,
		"GAME_MODE_TUTORIAL":         2,
		"GAME_MODE_RANDOM_CHALLENGE": 3,
	}
)

func (x GameMode) Enum() *GameMode {
	p := new(GameMode)
	*p = x
	return p
}

func (x GameMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tally_v1_board_proto_enumTypes[1].Descriptor()
}

func (GameMode) Type() protoreflect.EnumType {
	return &file_proto_tally_v1_board_proto_enumTypes[1]
}

func (x GameMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameMode.Descriptor instead.
func (GameMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{1}
}

type Difficulty int32

const (
	Difficulty_DIFFICULTY_UNSPECIFIED Difficulty = 0
	Difficulty_DIFFICULTY_EASY        Difficulty = 1
	Difficulty_DIFFICULTY_MEDIUM      Difficulty = 2
	Difficulty_DIFFICULTY_HARD        Difficulty = 3
)

// Enum value maps for Difficulty.
var (
	Difficulty_name = map[int32]string{
		0: "DIFFICULTY_UNSPECIFIED",
		1: "DIFFICULTY_EASY",
		2: "DIFFICULTY_MEDIUM",
		3: "DIFFICULTY_HARD",
	}
	Difficulty_value = map[string]int32{
		"DIFFICULTY_UNSPECIFIED": 0,
		"DIFFICULTY_EASY":        1,
		"DIFFICULTY_MEDIUM":      2,
		"DIFFICULTY_HARD":        3,
	}
)

func (x Difficulty) Enum() *Difficulty {
	p := new(Difficulty)
	*p = x
	return p
}

func (x Difficulty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Difficulty) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tally_v1_board_proto_enumTypes[2].Descriptor()
}

func (Difficulty) Type() protoreflect.EnumType {
	return &file_proto_tally_v1_board_proto_enumTypes[2]
}

func (x Difficulty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Difficulty.Descriptor instead.
func (Difficulty) EnumDescriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{2}
}

type HintPreference int32

const (
	HintPreference_HINT_PREFERENCE_UNSPECIFIED HintPreference = 0
	// Returns the shortest hint, counting swipes and combines.
	HintPreference_HINT_PREFERENCE_SHORT HintPreference = 2
	// Returns the hint calculated as giving the highest score
	HintPreference_HINT_PREFERENCE_HIGHEST_SCORE HintPreference = 3
	// Returns the hint that has the least amount of swipes.
	HintPreference_HINT_PREFERENCE_MINIMUM_SWIPES HintPreference = 4
	// Return the hint that has the lowest swipes to combine ratio
	HintPreference_HINT_PREFERENCE_MINIMUM_SWIPES_TO_COMBINE_RATIO HintPreference = 5
	// Return the hint that has the first hint of type combine
	HintPreference_HINT_PREFERENCE_FIRST_COMBINE HintPreference = 6
)

// Enum value maps for HintPreference.
var (
	HintPreference_name = map[int32]string{
		0: "HINT_PREFERENCE_UNSPECIFIED",
		2: "HINT_PREFERENCE_SHORT",
		3: "HINT_PREFERENCE_HIGHEST_SCORE",
		4: "HINT_PREFERENCE_MINIMUM_SWIPES",
		5: "HINT_PREFERENCE_MINIMUM_SWIPES_TO_COMBINE_RATIO",
		6: "HINT_PREFERENCE_FIRST_COMBINE",
	}
	HintPreference_value = map[string]int32{
		"HINT_PREFERENCE_UNSPECIFIED":                     0,
		"HINT_PREFERENCE_SHORT":                           2,
		"HINT_PREFERENCE_HIGHEST_SCORE":                   3,
		"HINT_PREFERENCE_MINIMUM_SWIPES":                  4,
		"HINT_PREFERENCE_MINIMUM_SWIPES_TO_COMBINE_RATIO": 5,
		"HINT_PREFERENCE_FIRST_COMBINE":                   6,
	}
)

func (x HintPreference) Enum() *HintPreference {
	p := new(HintPreference)
	*p = x
	return p
}

func (x HintPreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HintPreference) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tally_v1_board_proto_enumTypes[3].Descriptor()
}

func (HintPreference) Type() protoreflect.EnumType {
	return &file_proto_tally_v1_board_proto_enumTypes[3]
}

func (x HintPreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HintPreference.Descriptor instead.
func (HintPreference) EnumDescriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{3}
}

type Vote int32

const (
	Vote_VOTE_UNSPECIFIED Vote = 0
	Vote_VOTE_TERRIBLE_1  Vote = 1
	Vote_VOTE_BAD_2       Vote = 2
	Vote_VOTE_OK_3        Vote = 3
	Vote_VOTE_GOOD_4      Vote = 4
	Vote_VOTE_GREAT_5     Vote = 5
)

// Enum value maps for Vote.
var (
	Vote_name = map[int32]string{
		0: "VOTE_UNSPECIFIED",
		1: "VOTE_TERRIBLE_1",
		2: "VOTE_BAD_2",
		3: "VOTE_OK_3",
		4: "VOTE_GOOD_4",
		5: "VOTE_GREAT_5",
	}
	Vote_value = map[string]int32{
		"VOTE_UNSPECIFIED": 0,
		"VOTE_TERRIBLE_1":  1,
		"VOTE_BAD_2":       2,
		"VOTE_OK_3":        3,
		"VOTE_GOOD_4":      4,
		"VOTE_GREAT_5":     5,
	}
)

func (x Vote) Enum() *Vote {
	p := new(Vote)
	*p = x
	return p
}

func (x Vote) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vote) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tally_v1_board_proto_enumTypes[4].Descriptor()
}

func (Vote) Type() protoreflect.EnumType {
	return &file_proto_tally_v1_board_proto_enumTypes[4]
}

func (x Vote) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vote.Descriptor instead.
func (Vote) EnumDescriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{4}
}

type GeneratorAlgorithm int32

const (
	GeneratorAlgorithm_GENERATOR_ALGORITHM_UNSPECIFIED GeneratorAlgorithm = 0
	// A slow algorithm which attempts to generate games by randomization
	// Very slow for larger values, or more advanced games
	GeneratorAlgorithm_GENERATOR_ALGORITHM_RANDOMIZED GeneratorAlgorithm = 1
	// A faster algorithm that works in reverse.
	// The games generated can be a bit monotomous.
	GeneratorAlgorithm_GENERATOR_ALGORITHM_REVERSE GeneratorAlgorithm = 2
)

// Enum value maps for GeneratorAlgorithm.
var (
	GeneratorAlgorithm_name = map[int32]string{
		0: "GENERATOR_ALGORITHM_UNSPECIFIED",
		1: "GENERATOR_ALGORITHM_RANDOMIZED",
		2: "GENERATOR_ALGORITHM_REVERSE",
	}
	GeneratorAlgorithm_value = map[string]int32{
		"GENERATOR_ALGORITHM_UNSPECIFIED": 0,
		"GENERATOR_ALGORITHM_RANDOMIZED":  1,
		"GENERATOR_ALGORITHM_REVERSE":     2,
	}
)

func (x GeneratorAlgorithm) Enum() *GeneratorAlgorithm {
	p := new(GeneratorAlgorithm)
	*p = x
	return p
}

func (x GeneratorAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeneratorAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_tally_v1_board_proto_enumTypes[5].Descriptor()
}

func (GeneratorAlgorithm) Type() protoreflect.EnumType {
	return &file_proto_tally_v1_board_proto_enumTypes[5]
}

func (x GeneratorAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeneratorAlgorithm.Descriptor instead.
func (GeneratorAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{5}
}

// Cell is single value on the board. The value can then be calculated with base
// * 2^twopow
type Cell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Base-value
	Base int64 `protobuf:"varint,1,opt,name=base,proto3" json:"base,omitempty"`
	// Pow-value
	Twopow int64 `protobuf:"varint,2,opt,name=twopow,proto3" json:"twopow,omitempty"` // string id = 3;
}

func (x *Cell) Reset() {
	*x = Cell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cell) ProtoMessage() {}

func (x *Cell) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cell.ProtoReflect.Descriptor instead.
func (*Cell) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{0}
}

func (x *Cell) GetBase() int64 {
	if x != nil {
		return x.Base
	}
	return 0
}

func (x *Cell) GetTwopow() int64 {
	if x != nil {
		return x.Twopow
	}
	return 0
}

type InternalDataHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       uint64       `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Instruction *Instruction `protobuf:"bytes,2,opt,name=instruction,proto3" json:"instruction,omitempty"`
	Cells       []int64      `protobuf:"varint,3,rep,packed,name=cells,proto3" json:"cells,omitempty"`
}

func (x *InternalDataHistory) Reset() {
	*x = InternalDataHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalDataHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalDataHistory) ProtoMessage() {}

func (x *InternalDataHistory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalDataHistory.ProtoReflect.Descriptor instead.
func (*InternalDataHistory) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{1}
}

func (x *InternalDataHistory) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *InternalDataHistory) GetInstruction() *Instruction {
	if x != nil {
		return x.Instruction
	}
	return nil
}

func (x *InternalDataHistory) GetCells() []int64 {
	if x != nil {
		return x.Cells
	}
	return nil
}

type InternalDataGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State uint64  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Seed  uint64  `protobuf:"varint,2,opt,name=seed,proto3" json:"seed,omitempty"`
	Cells []int64 `protobuf:"varint,3,rep,packed,name=cells,proto3" json:"cells,omitempty"`
}

func (x *InternalDataGame) Reset() {
	*x = InternalDataGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalDataGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalDataGame) ProtoMessage() {}

func (x *InternalDataGame) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalDataGame.ProtoReflect.Descriptor instead.
func (*InternalDataGame) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{2}
}

func (x *InternalDataGame) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *InternalDataGame) GetSeed() uint64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *InternalDataGame) GetCells() []int64 {
	if x != nil {
		return x.Cells
	}
	return nil
}

type Board struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cells   []*Cell `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"`
	Columns uint32  `protobuf:"varint,2,opt,name=columns,proto3" json:"columns,omitempty"`
	Rows    uint32  `protobuf:"varint,3,opt,name=rows,proto3" json:"rows,omitempty"`
	Name    string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Id      string  `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Board) Reset() {
	*x = Board{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Board) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Board) ProtoMessage() {}

func (x *Board) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Board.ProtoReflect.Descriptor instead.
func (*Board) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{3}
}

func (x *Board) GetCells() []*Cell {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *Board) GetColumns() uint32 {
	if x != nil {
		return x.Columns
	}
	return 0
}

func (x *Board) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *Board) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Board) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Instruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to InstructionOneof:
	//
	//	*Instruction_Swipe
	//	*Instruction_Combine
	//	*Instruction_Bytes
	InstructionOneof isInstruction_InstructionOneof `protobuf_oneof:"instruction_oneof"`
}

func (x *Instruction) Reset() {
	*x = Instruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction) ProtoMessage() {}

func (x *Instruction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction.ProtoReflect.Descriptor instead.
func (*Instruction) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{4}
}

func (m *Instruction) GetInstructionOneof() isInstruction_InstructionOneof {
	if m != nil {
		return m.InstructionOneof
	}
	return nil
}

func (x *Instruction) GetSwipe() SwipeDirection {
	if x, ok := x.GetInstructionOneof().(*Instruction_Swipe); ok {
		return x.Swipe
	}
	return SwipeDirection_SWIPE_DIRECTION_UNSPECIFIED
}

func (x *Instruction) GetCombine() *Indexes {
	if x, ok := x.GetInstructionOneof().(*Instruction_Combine); ok {
		return x.Combine
	}
	return nil
}

func (x *Instruction) GetBytes() []byte {
	if x, ok := x.GetInstructionOneof().(*Instruction_Bytes); ok {
		return x.Bytes
	}
	return nil
}

type isInstruction_InstructionOneof interface {
	isInstruction_InstructionOneof()
}

type Instruction_Swipe struct {
	Swipe SwipeDirection `protobuf:"varint,1,opt,name=swipe,proto3,enum=tally.v1.SwipeDirection,oneof"`
}

type Instruction_Combine struct {
	Combine *Indexes `protobuf:"bytes,2,opt,name=combine,proto3,oneof"`
}

type Instruction_Bytes struct {
	Bytes []byte `protobuf:"bytes,3,opt,name=bytes,proto3,oneof"`
}

func (*Instruction_Swipe) isInstruction_InstructionOneof() {}

func (*Instruction_Combine) isInstruction_InstructionOneof() {}

func (*Instruction_Bytes) isInstruction_InstructionOneof() {}

type GetHintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HintPreference HintPreference `protobuf:"varint,1,opt,name=hint_preference,json=hintPreference,proto3,enum=tally.v1.HintPreference" json:"hint_preference,omitempty"`
	MaxLength      uint32         `protobuf:"varint,2,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
}

func (x *GetHintRequest) Reset() {
	*x = GetHintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHintRequest) ProtoMessage() {}

func (x *GetHintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHintRequest.ProtoReflect.Descriptor instead.
func (*GetHintRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{5}
}

func (x *GetHintRequest) GetHintPreference() HintPreference {
	if x != nil {
		return x.HintPreference
	}
	return HintPreference_HINT_PREFERENCE_UNSPECIFIED
}

func (x *GetHintRequest) GetMaxLength() uint32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

type GetHintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instructions []*Instruction `protobuf:"bytes,1,rep,name=instructions,proto3" json:"instructions,omitempty"`
}

func (x *GetHintResponse) Reset() {
	*x = GetHintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHintResponse) ProtoMessage() {}

func (x *GetHintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHintResponse.ProtoReflect.Descriptor instead.
func (*GetHintResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{6}
}

func (x *GetHintResponse) GetInstructions() []*Instruction {
	if x != nil {
		return x.Instructions
	}
	return nil
}

type GetSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{7}
}

type RestartGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestartGameRequest) Reset() {
	*x = RestartGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartGameRequest) ProtoMessage() {}

func (x *RestartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartGameRequest.ProtoReflect.Descriptor instead.
func (*RestartGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{8}
}

type NewGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode GameMode `protobuf:"varint,1,opt,name=mode,proto3,enum=tally.v1.GameMode" json:"mode,omitempty"`
	// Types that are assignable to Variant:
	//
	//	*NewGameRequest_Difficulty
	//	*NewGameRequest_LevelIndex
	//	*NewGameRequest_Id
	Variant isNewGameRequest_Variant `protobuf_oneof:"variant"`
}

func (x *NewGameRequest) Reset() {
	*x = NewGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGameRequest) ProtoMessage() {}

func (x *NewGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGameRequest.ProtoReflect.Descriptor instead.
func (*NewGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{9}
}

func (x *NewGameRequest) GetMode() GameMode {
	if x != nil {
		return x.Mode
	}
	return GameMode_GAME_MODE_UNSPECIFIED
}

func (m *NewGameRequest) GetVariant() isNewGameRequest_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *NewGameRequest) GetDifficulty() Difficulty {
	if x, ok := x.GetVariant().(*NewGameRequest_Difficulty); ok {
		return x.Difficulty
	}
	return Difficulty_DIFFICULTY_UNSPECIFIED
}

func (x *NewGameRequest) GetLevelIndex() uint32 {
	if x, ok := x.GetVariant().(*NewGameRequest_LevelIndex); ok {
		return x.LevelIndex
	}
	return 0
}

func (x *NewGameRequest) GetId() string {
	if x, ok := x.GetVariant().(*NewGameRequest_Id); ok {
		return x.Id
	}
	return ""
}

type isNewGameRequest_Variant interface {
	isNewGameRequest_Variant()
}

type NewGameRequest_Difficulty struct {
	Difficulty Difficulty `protobuf:"varint,2,opt,name=difficulty,proto3,enum=tally.v1.Difficulty,oneof"`
}

type NewGameRequest_LevelIndex struct {
	LevelIndex uint32 `protobuf:"varint,3,opt,name=level_index,json=levelIndex,proto3,oneof"`
}

type NewGameRequest_Id struct {
	Id string `protobuf:"bytes,4,opt,name=id,proto3,oneof"`
}

func (*NewGameRequest_Difficulty) isNewGameRequest_Variant() {}

func (*NewGameRequest_LevelIndex) isNewGameRequest_Variant() {}

func (*NewGameRequest_Id) isNewGameRequest_Variant() {}

type RestartGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board *Board `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Score int64  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Moves int64  `protobuf:"varint,3,opt,name=moves,proto3" json:"moves,omitempty"`
}

func (x *RestartGameResponse) Reset() {
	*x = RestartGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartGameResponse) ProtoMessage() {}

func (x *RestartGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartGameResponse.ProtoReflect.Descriptor instead.
func (*RestartGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{10}
}

func (x *RestartGameResponse) GetBoard() *Board {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *RestartGameResponse) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *RestartGameResponse) GetMoves() int64 {
	if x != nil {
		return x.Moves
	}
	return 0
}

type GetSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{11}
}

func (x *GetSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type NewGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board       *Board   `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Score       int64    `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Moves       int64    `protobuf:"varint,3,opt,name=moves,proto3" json:"moves,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Mode        GameMode `protobuf:"varint,5,opt,name=mode,proto3,enum=tally.v1.GameMode" json:"mode,omitempty"`
}

func (x *NewGameResponse) Reset() {
	*x = NewGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewGameResponse) ProtoMessage() {}

func (x *NewGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewGameResponse.ProtoReflect.Descriptor instead.
func (*NewGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{12}
}

func (x *NewGameResponse) GetBoard() *Board {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *NewGameResponse) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *NewGameResponse) GetMoves() int64 {
	if x != nil {
		return x.Moves
	}
	return 0
}

func (x *NewGameResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewGameResponse) GetMode() GameMode {
	if x != nil {
		return x.Mode
	}
	return GameMode_GAME_MODE_UNSPECIFIED
}

type SwipeBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction SwipeDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=tally.v1.SwipeDirection" json:"direction,omitempty"`
}

func (x *SwipeBoardRequest) Reset() {
	*x = SwipeBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwipeBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwipeBoardRequest) ProtoMessage() {}

func (x *SwipeBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwipeBoardRequest.ProtoReflect.Descriptor instead.
func (*SwipeBoardRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{13}
}

func (x *SwipeBoardRequest) GetDirection() SwipeDirection {
	if x != nil {
		return x.Direction
	}
	return SwipeDirection_SWIPE_DIRECTION_UNSPECIFIED
}

type SwipeBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates whether or not any change was made.
	// This can happen in these scenarios:
	// 1. The board is full.
	// 2. Cell-generating is not active and
	//   - All the bricks in the direction of which is beeing swiped is already
	//     stacked at that edge
	//
	// This may be expanded upon with future gamemodes.
	DidChange bool   `protobuf:"varint,1,opt,name=did_change,json=didChange,proto3" json:"did_change,omitempty"`
	Board     *Board `protobuf:"bytes,2,opt,name=board,proto3" json:"board,omitempty"`
	Moves     int64  `protobuf:"varint,3,opt,name=moves,proto3" json:"moves,omitempty"`
}

func (x *SwipeBoardResponse) Reset() {
	*x = SwipeBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwipeBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwipeBoardResponse) ProtoMessage() {}

func (x *SwipeBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwipeBoardResponse.ProtoReflect.Descriptor instead.
func (*SwipeBoardResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{14}
}

func (x *SwipeBoardResponse) GetDidChange() bool {
	if x != nil {
		return x.DidChange
	}
	return false
}

func (x *SwipeBoardResponse) GetBoard() *Board {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *SwipeBoardResponse) GetMoves() int64 {
	if x != nil {
		return x.Moves
	}
	return 0
}

type Coordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X uint32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y uint32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{15}
}

func (x *Coordinate) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Coordinate) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Indexes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index []uint32 `protobuf:"varint,1,rep,packed,name=index,proto3" json:"index,omitempty"`
}

func (x *Indexes) Reset() {
	*x = Indexes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Indexes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Indexes) ProtoMessage() {}

func (x *Indexes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Indexes.ProtoReflect.Descriptor instead.
func (*Indexes) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{16}
}

func (x *Indexes) GetIndex() []uint32 {
	if x != nil {
		return x.Index
	}
	return nil
}

type SelectionCoordinates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coordinate []*Coordinate `protobuf:"bytes,1,rep,name=coordinate,proto3" json:"coordinate,omitempty"`
}

func (x *SelectionCoordinates) Reset() {
	*x = SelectionCoordinates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectionCoordinates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionCoordinates) ProtoMessage() {}

func (x *SelectionCoordinates) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionCoordinates.ProtoReflect.Descriptor instead.
func (*SelectionCoordinates) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{17}
}

func (x *SelectionCoordinates) GetCoordinate() []*Coordinate {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

type CombineCellsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Selection:
	//
	//	*CombineCellsRequest_Indexes
	//	*CombineCellsRequest_Coordinate
	Selection isCombineCellsRequest_Selection `protobuf_oneof:"selection"`
}

func (x *CombineCellsRequest) Reset() {
	*x = CombineCellsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineCellsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineCellsRequest) ProtoMessage() {}

func (x *CombineCellsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineCellsRequest.ProtoReflect.Descriptor instead.
func (*CombineCellsRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{18}
}

func (m *CombineCellsRequest) GetSelection() isCombineCellsRequest_Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (x *CombineCellsRequest) GetIndexes() *Indexes {
	if x, ok := x.GetSelection().(*CombineCellsRequest_Indexes); ok {
		return x.Indexes
	}
	return nil
}

func (x *CombineCellsRequest) GetCoordinate() *Coordinate {
	if x, ok := x.GetSelection().(*CombineCellsRequest_Coordinate); ok {
		return x.Coordinate
	}
	return nil
}

type isCombineCellsRequest_Selection interface {
	isCombineCellsRequest_Selection()
}

type CombineCellsRequest_Indexes struct {
	Indexes *Indexes `protobuf:"bytes,1,opt,name=indexes,proto3,oneof"`
}

type CombineCellsRequest_Coordinate struct {
	Coordinate *Coordinate `protobuf:"bytes,2,opt,name=coordinate,proto3,oneof"`
}

func (*CombineCellsRequest_Indexes) isCombineCellsRequest_Selection() {}

func (*CombineCellsRequest_Coordinate) isCombineCellsRequest_Selection() {}

type CombineCellsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board  *Board `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Score  int64  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	DidWin bool   `protobuf:"varint,3,opt,name=did_win,json=didWin,proto3" json:"did_win,omitempty"`
	Moves  int64  `protobuf:"varint,4,opt,name=moves,proto3" json:"moves,omitempty"`
}

func (x *CombineCellsResponse) Reset() {
	*x = CombineCellsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineCellsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineCellsResponse) ProtoMessage() {}

func (x *CombineCellsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineCellsResponse.ProtoReflect.Descriptor instead.
func (*CombineCellsResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{19}
}

func (x *CombineCellsResponse) GetBoard() *Board {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *CombineCellsResponse) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *CombineCellsResponse) GetDidWin() bool {
	if x != nil {
		return x.DidWin
	}
	return false
}

func (x *CombineCellsResponse) GetMoves() int64 {
	if x != nil {
		return x.Moves
	}
	return 0
}

type VoteBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// How fun the board is to play
	FunVote Vote `protobuf:"varint,3,opt,name=fun_vote,json=funVote,proto3,enum=tally.v1.Vote" json:"fun_vote,omitempty"`
}

func (x *VoteBoardRequest) Reset() {
	*x = VoteBoardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteBoardRequest) ProtoMessage() {}

func (x *VoteBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteBoardRequest.ProtoReflect.Descriptor instead.
func (*VoteBoardRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{20}
}

func (x *VoteBoardRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *VoteBoardRequest) GetFunVote() Vote {
	if x != nil {
		return x.FunVote
	}
	return Vote_VOTE_UNSPECIFIED
}

type VoteBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FunVote Vote   `protobuf:"varint,2,opt,name=fun_vote,json=funVote,proto3,enum=tally.v1.Vote" json:"fun_vote,omitempty"`
}

func (x *VoteBoardResponse) Reset() {
	*x = VoteBoardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteBoardResponse) ProtoMessage() {}

func (x *VoteBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteBoardResponse.ProtoReflect.Descriptor instead.
func (*VoteBoardResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{21}
}

func (x *VoteBoardResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VoteBoardResponse) GetFunVote() Vote {
	if x != nil {
		return x.FunVote
	}
	return Vote_VOTE_UNSPECIFIED
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board       *Board   `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Score       int64    `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Moves       int64    `protobuf:"varint,4,opt,name=moves,proto3" json:"moves,omitempty"`
	Mode        GameMode `protobuf:"varint,5,opt,name=mode,proto3,enum=tally.v1.GameMode" json:"mode,omitempty"`
	Description string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{22}
}

func (x *Game) GetBoard() *Board {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *Game) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Game) GetMoves() int64 {
	if x != nil {
		return x.Moves
	}
	return 0
}

func (x *Game) GetMode() GameMode {
	if x != nil {
		return x.Mode
	}
	return GameMode_GAME_MODE_UNSPECIFIED
}

func (x *Game) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game        *Game  `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	SessionId   string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Username    string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	GamesPlayed int64  `protobuf:"varint,4,opt,name=games_played,json=gamesPlayed,proto3" json:"games_played,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{23}
}

func (x *Session) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *Session) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Session) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Session) GetGamesPlayed() int64 {
	if x != nil {
		return x.GamesPlayed
	}
	return 0
}

type GenerateGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows               uint32             `protobuf:"varint,1,opt,name=rows,proto3" json:"rows,omitempty"`
	Columns            uint32             `protobuf:"varint,2,opt,name=columns,proto3" json:"columns,omitempty"`
	TargetCellValue    uint64             `protobuf:"varint,3,opt,name=target_cell_value,json=targetCellValue,proto3" json:"target_cell_value,omitempty"`
	MaxBricks          uint32             `protobuf:"varint,4,opt,name=max_bricks,json=maxBricks,proto3" json:"max_bricks,omitempty"`
	MinMoves           uint64             `protobuf:"varint,6,opt,name=min_moves,json=minMoves,proto3" json:"min_moves,omitempty"`
	MaxMoves           uint64             `protobuf:"varint,7,opt,name=max_moves,json=maxMoves,proto3" json:"max_moves,omitempty"`
	MaxAdditionalCells uint64             `protobuf:"varint,8,opt,name=max_additional_cells,json=maxAdditionalCells,proto3" json:"max_additional_cells,omitempty"`
	RandomCellChance   uint64             `protobuf:"varint,9,opt,name=random_cell_chance,json=randomCellChance,proto3" json:"random_cell_chance,omitempty"`
	Seed               uint64             `protobuf:"varint,10,opt,name=seed,proto3" json:"seed,omitempty"`
	Salt               uint64             `protobuf:"varint,11,opt,name=salt,proto3" json:"salt,omitempty"`
	WithSolutions      bool               `protobuf:"varint,12,opt,name=with_solutions,json=withSolutions,proto3" json:"with_solutions,omitempty"`
	Algorithm          GeneratorAlgorithm `protobuf:"varint,13,opt,name=algorithm,proto3,enum=tally.v1.GeneratorAlgorithm" json:"algorithm,omitempty"`
}

func (x *GenerateGameRequest) Reset() {
	*x = GenerateGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateGameRequest) ProtoMessage() {}

func (x *GenerateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateGameRequest.ProtoReflect.Descriptor instead.
func (*GenerateGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{24}
}

func (x *GenerateGameRequest) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *GenerateGameRequest) GetColumns() uint32 {
	if x != nil {
		return x.Columns
	}
	return 0
}

func (x *GenerateGameRequest) GetTargetCellValue() uint64 {
	if x != nil {
		return x.TargetCellValue
	}
	return 0
}

func (x *GenerateGameRequest) GetMaxBricks() uint32 {
	if x != nil {
		return x.MaxBricks
	}
	return 0
}

func (x *GenerateGameRequest) GetMinMoves() uint64 {
	if x != nil {
		return x.MinMoves
	}
	return 0
}

func (x *GenerateGameRequest) GetMaxMoves() uint64 {
	if x != nil {
		return x.MaxMoves
	}
	return 0
}

func (x *GenerateGameRequest) GetMaxAdditionalCells() uint64 {
	if x != nil {
		return x.MaxAdditionalCells
	}
	return 0
}

func (x *GenerateGameRequest) GetRandomCellChance() uint64 {
	if x != nil {
		return x.RandomCellChance
	}
	return 0
}

func (x *GenerateGameRequest) GetSeed() uint64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *GenerateGameRequest) GetSalt() uint64 {
	if x != nil {
		return x.Salt
	}
	return 0
}

func (x *GenerateGameRequest) GetWithSolutions() bool {
	if x != nil {
		return x.WithSolutions
	}
	return false
}

func (x *GenerateGameRequest) GetAlgorithm() GeneratorAlgorithm {
	if x != nil {
		return x.Algorithm
	}
	return GeneratorAlgorithm_GENERATOR_ALGORITHM_UNSPECIFIED
}

type GenerateGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game         *Game   `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	IdealMoves   uint32  `protobuf:"varint,2,opt,name=ideal_moves,json=idealMoves,proto3" json:"ideal_moves,omitempty"`
	IdealScore   uint64  `protobuf:"varint,3,opt,name=ideal_score,json=idealScore,proto3" json:"ideal_score,omitempty"`
	HighestScore uint64  `protobuf:"varint,4,opt,name=highest_score,json=highestScore,proto3" json:"highest_score,omitempty"`
	Solutions    []*Game `protobuf:"bytes,5,rep,name=solutions,proto3" json:"solutions,omitempty"`
}

func (x *GenerateGameResponse) Reset() {
	*x = GenerateGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateGameResponse) ProtoMessage() {}

func (x *GenerateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateGameResponse.ProtoReflect.Descriptor instead.
func (*GenerateGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{25}
}

func (x *GenerateGameResponse) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *GenerateGameResponse) GetIdealMoves() uint32 {
	if x != nil {
		return x.IdealMoves
	}
	return 0
}

func (x *GenerateGameResponse) GetIdealScore() uint64 {
	if x != nil {
		return x.IdealScore
	}
	return 0
}

func (x *GenerateGameResponse) GetHighestScore() uint64 {
	if x != nil {
		return x.HighestScore
	}
	return 0
}

func (x *GenerateGameResponse) GetSolutions() []*Game {
	if x != nil {
		return x.Solutions
	}
	return nil
}

type GetGameChallengesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGameChallengesRequest) Reset() {
	*x = GetGameChallengesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameChallengesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameChallengesRequest) ProtoMessage() {}

func (x *GetGameChallengesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameChallengesRequest.ProtoReflect.Descriptor instead.
func (*GetGameChallengesRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{26}
}

type GetGameChallengesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenges []*GameChallenge `protobuf:"bytes,1,rep,name=challenges,proto3" json:"challenges,omitempty"`
}

func (x *GetGameChallengesResponse) Reset() {
	*x = GetGameChallengesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameChallengesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameChallengesResponse) ProtoMessage() {}

func (x *GetGameChallengesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameChallengesResponse.ProtoReflect.Descriptor instead.
func (*GetGameChallengesResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{27}
}

func (x *GetGameChallengesResponse) GetChallenges() []*GameChallenge {
	if x != nil {
		return x.Challenges
	}
	return nil
}

type GameChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChallengeNumber uint32  `protobuf:"varint,2,opt,name=challenge_number,json=challengeNumber,proto3" json:"challenge_number,omitempty"`
	IdealMoves      uint32  `protobuf:"varint,3,opt,name=ideal_moves,json=idealMoves,proto3" json:"ideal_moves,omitempty"`
	TargetCellValue uint64  `protobuf:"varint,4,opt,name=target_cell_value,json=targetCellValue,proto3" json:"target_cell_value,omitempty"`
	Columns         uint32  `protobuf:"varint,5,opt,name=columns,proto3" json:"columns,omitempty"`
	Rows            uint32  `protobuf:"varint,6,opt,name=rows,proto3" json:"rows,omitempty"`
	Name            string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Description     string  `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Cells           []*Cell `protobuf:"bytes,9,rep,name=cells,proto3" json:"cells,omitempty"`
}

func (x *GameChallenge) Reset() {
	*x = GameChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameChallenge) ProtoMessage() {}

func (x *GameChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameChallenge.ProtoReflect.Descriptor instead.
func (*GameChallenge) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{28}
}

func (x *GameChallenge) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GameChallenge) GetChallengeNumber() uint32 {
	if x != nil {
		return x.ChallengeNumber
	}
	return 0
}

func (x *GameChallenge) GetIdealMoves() uint32 {
	if x != nil {
		return x.IdealMoves
	}
	return 0
}

func (x *GameChallenge) GetTargetCellValue() uint64 {
	if x != nil {
		return x.TargetCellValue
	}
	return 0
}

func (x *GameChallenge) GetColumns() uint32 {
	if x != nil {
		return x.Columns
	}
	return 0
}

func (x *GameChallenge) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *GameChallenge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameChallenge) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GameChallenge) GetCells() []*Cell {
	if x != nil {
		return x.Cells
	}
	return nil
}

type CreateGameChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChallengeNumber uint32  `protobuf:"varint,1,opt,name=challenge_number,json=challengeNumber,proto3" json:"challenge_number,omitempty"`
	IdealMoves      uint32  `protobuf:"varint,2,opt,name=ideal_moves,json=idealMoves,proto3" json:"ideal_moves,omitempty"`
	TargetCellValue uint64  `protobuf:"varint,3,opt,name=target_cell_value,json=targetCellValue,proto3" json:"target_cell_value,omitempty"`
	Columns         uint32  `protobuf:"varint,4,opt,name=columns,proto3" json:"columns,omitempty"`
	Rows            uint32  `protobuf:"varint,5,opt,name=rows,proto3" json:"rows,omitempty"`
	Name            string  `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description     string  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Cells           []*Cell `protobuf:"bytes,8,rep,name=cells,proto3" json:"cells,omitempty"`
}

func (x *CreateGameChallengeRequest) Reset() {
	*x = CreateGameChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameChallengeRequest) ProtoMessage() {}

func (x *CreateGameChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameChallengeRequest.ProtoReflect.Descriptor instead.
func (*CreateGameChallengeRequest) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{29}
}

func (x *CreateGameChallengeRequest) GetChallengeNumber() uint32 {
	if x != nil {
		return x.ChallengeNumber
	}
	return 0
}

func (x *CreateGameChallengeRequest) GetIdealMoves() uint32 {
	if x != nil {
		return x.IdealMoves
	}
	return 0
}

func (x *CreateGameChallengeRequest) GetTargetCellValue() uint64 {
	if x != nil {
		return x.TargetCellValue
	}
	return 0
}

func (x *CreateGameChallengeRequest) GetColumns() uint32 {
	if x != nil {
		return x.Columns
	}
	return 0
}

func (x *CreateGameChallengeRequest) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *CreateGameChallengeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGameChallengeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateGameChallengeRequest) GetCells() []*Cell {
	if x != nil {
		return x.Cells
	}
	return nil
}

type CreateGameChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChallengeNumber uint32 `protobuf:"varint,2,opt,name=challenge_number,json=challengeNumber,proto3" json:"challenge_number,omitempty"`
}

func (x *CreateGameChallengeResponse) Reset() {
	*x = CreateGameChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tally_v1_board_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameChallengeResponse) ProtoMessage() {}

func (x *CreateGameChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tally_v1_board_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameChallengeResponse.ProtoReflect.Descriptor instead.
func (*CreateGameChallengeResponse) Descriptor() ([]byte, []int) {
	return file_proto_tally_v1_board_proto_rawDescGZIP(), []int{30}
}

func (x *CreateGameChallengeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateGameChallengeResponse) GetChallengeNumber() uint32 {
	if x != nil {
		return x.ChallengeNumber
	}
	return 0
}

var File_proto_tally_v1_board_proto protoreflect.FileDescriptor

var file_proto_tally_v1_board_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x61,
	0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x77, 0x6f, 0x70, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x77, 0x6f, 0x70, 0x6f, 0x77, 0x22, 0x7a, 0x0a, 0x13, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x7f, 0x0a, 0x05, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65,
	0x6c, 0x6c, 0x52, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x0b,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x05, 0x73,
	0x77, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x61, 0x6c,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x70, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x73, 0x77, 0x69, 0x70, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x05,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x72, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x68,
	0x69, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e,
	0x68, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x4c, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x36, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x64,
	0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0b, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x42, 0x09,
	0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x13, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f,
	0x76, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x61, 0x6c,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x6c, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x53, 0x77, 0x69, 0x70, 0x65,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x70, 0x65,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x12, 0x53, 0x77, 0x69, 0x70, 0x65, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69,
	0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x64, 0x69, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x22, 0x28, 0x0a, 0x0a, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x79,
	0x22, 0x1f, 0x0a, 0x07, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x4c, 0x0a, 0x14, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x22,
	0x89, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x61, 0x6c,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x14,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x69, 0x64, 0x5f, 0x77, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x69, 0x64, 0x57, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73,
	0x22, 0x5a, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x22, 0x4e, 0x0a, 0x11,
	0x56, 0x6f, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x74, 0x65, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x22, 0xa3, 0x01, 0x0a,
	0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74,
	0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64,
	0x22, 0xb3, 0x03, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x42, 0x72, 0x69, 0x63, 0x6b,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d,
	0x61, 0x78, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x65,
	0x6c, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x65, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x61, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x77, 0x69, 0x74,
	0x68, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x61, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67,
	0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x22, 0xcf, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x76,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x61, 0x6c, 0x4d,
	0x6f, 0x76, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x68, 0x69,
	0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xa1, 0x02, 0x0a, 0x0d, 0x47,
	0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x61, 0x6c,
	0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x64,
	0x65, 0x61, 0x6c, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x65, 0x6c, 0x6c,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x9e,
	0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x61,
	0x6c, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69,
	0x64, 0x65, 0x61, 0x6c, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x65, 0x6c,
	0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x22,
	0x58, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2a, 0x98, 0x01, 0x0a, 0x0e, 0x53, 0x77,
	0x69, 0x70, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x1b,
	0x53, 0x57, 0x49, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x57, 0x49, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x57, 0x49, 0x50, 0x45, 0x5f, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x57, 0x49, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x57,
	0x49, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45,
	0x46, 0x54, 0x10, 0x04, 0x2a, 0x73, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x15, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x54,
	0x55, 0x54, 0x4f, 0x52, 0x49, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x5f, 0x43, 0x48,
	0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x2a, 0x69, 0x0a, 0x0a, 0x44, 0x69, 0x66,
	0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x49, 0x46, 0x46, 0x49,
	0x43, 0x55, 0x4c, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x49, 0x46, 0x46, 0x49, 0x43, 0x55, 0x4c, 0x54,
	0x59, 0x5f, 0x45, 0x41, 0x53, 0x59, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x49, 0x46, 0x46,
	0x49, 0x43, 0x55, 0x4c, 0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12,
	0x13, 0x0a, 0x0f, 0x44, 0x49, 0x46, 0x46, 0x49, 0x43, 0x55, 0x4c, 0x54, 0x59, 0x5f, 0x48, 0x41,
	0x52, 0x44, 0x10, 0x03, 0x2a, 0xeb, 0x01, 0x0a, 0x0e, 0x48, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x48, 0x49, 0x4e, 0x54, 0x5f,
	0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x49, 0x4e, 0x54,
	0x5f, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x48, 0x4f, 0x52,
	0x54, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x46,
	0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x45, 0x53, 0x54, 0x5f, 0x53,
	0x43, 0x4f, 0x52, 0x45, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x50,
	0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x4d, 0x55,
	0x4d, 0x5f, 0x53, 0x57, 0x49, 0x50, 0x45, 0x53, 0x10, 0x04, 0x12, 0x33, 0x0a, 0x2f, 0x48, 0x49,
	0x4e, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x4d, 0x49,
	0x4e, 0x49, 0x4d, 0x55, 0x4d, 0x5f, 0x53, 0x57, 0x49, 0x50, 0x45, 0x53, 0x5f, 0x54, 0x4f, 0x5f,
	0x43, 0x4f, 0x4d, 0x42, 0x49, 0x4e, 0x45, 0x5f, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x10, 0x05, 0x12,
	0x21, 0x0a, 0x1d, 0x48, 0x49, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e,
	0x43, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x42, 0x49, 0x4e, 0x45,
	0x10, 0x06, 0x2a, 0x73, 0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x4f,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x49, 0x42, 0x4c,
	0x45, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x42, 0x41,
	0x44, 0x5f, 0x32, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x4f, 0x4b,
	0x5f, 0x33, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x47, 0x4f, 0x4f,
	0x44, 0x5f, 0x34, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x47, 0x52,
	0x45, 0x41, 0x54, 0x5f, 0x35, 0x10, 0x05, 0x2a, 0x7e, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x23, 0x0a,
	0x1f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52,
	0x49, 0x54, 0x48, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f,
	0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d,
	0x49, 0x5a, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41,
	0x54, 0x4f, 0x52, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x52, 0x45,
	0x56, 0x45, 0x52, 0x53, 0x45, 0x10, 0x02, 0x32, 0xa6, 0x06, 0x0a, 0x0c, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x77, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x74, 0x61,
	0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x61, 0x6c, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x53, 0x77, 0x69, 0x70, 0x65, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x77, 0x69, 0x70, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x69, 0x70,
	0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x73,
	0x12, 0x1d, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69,
	0x6e, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x1a, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x61,
	0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x22, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x12, 0x24, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72,
	0x75, 0x6e, 0x61, 0x72, 0x2d, 0x72, 0x6b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x67, 0x6f, 0x74,
	0x61, 0x6c, 0x6c, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74,
	0x61, 0x6c, 0x6c, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_tally_v1_board_proto_rawDescOnce sync.Once
	file_proto_tally_v1_board_proto_rawDescData = file_proto_tally_v1_board_proto_rawDesc
)

func file_proto_tally_v1_board_proto_rawDescGZIP() []byte {
	file_proto_tally_v1_board_proto_rawDescOnce.Do(func() {
		file_proto_tally_v1_board_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_tally_v1_board_proto_rawDescData)
	})
	return file_proto_tally_v1_board_proto_rawDescData
}

var file_proto_tally_v1_board_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_tally_v1_board_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_proto_tally_v1_board_proto_goTypes = []interface{}{
	(SwipeDirection)(0),                 // 0: tally.v1.SwipeDirection
	(GameMode)(0),                       // 1: tally.v1.GameMode
	(Difficulty)(0),                     // 2: tally.v1.Difficulty
	(HintPreference)(0),                 // 3: tally.v1.HintPreference
	(Vote)(0),                           // 4: tally.v1.Vote
	(GeneratorAlgorithm)(0),             // 5: tally.v1.GeneratorAlgorithm
	(*Cell)(nil),                        // 6: tally.v1.Cell
	(*InternalDataHistory)(nil),         // 7: tally.v1.InternalDataHistory
	(*InternalDataGame)(nil),            // 8: tally.v1.InternalDataGame
	(*Board)(nil),                       // 9: tally.v1.Board
	(*Instruction)(nil),                 // 10: tally.v1.Instruction
	(*GetHintRequest)(nil),              // 11: tally.v1.GetHintRequest
	(*GetHintResponse)(nil),             // 12: tally.v1.GetHintResponse
	(*GetSessionRequest)(nil),           // 13: tally.v1.GetSessionRequest
	(*RestartGameRequest)(nil),          // 14: tally.v1.RestartGameRequest
	(*NewGameRequest)(nil),              // 15: tally.v1.NewGameRequest
	(*RestartGameResponse)(nil),         // 16: tally.v1.RestartGameResponse
	(*GetSessionResponse)(nil),          // 17: tally.v1.GetSessionResponse
	(*NewGameResponse)(nil),             // 18: tally.v1.NewGameResponse
	(*SwipeBoardRequest)(nil),           // 19: tally.v1.SwipeBoardRequest
	(*SwipeBoardResponse)(nil),          // 20: tally.v1.SwipeBoardResponse
	(*Coordinate)(nil),                  // 21: tally.v1.Coordinate
	(*Indexes)(nil),                     // 22: tally.v1.Indexes
	(*SelectionCoordinates)(nil),        // 23: tally.v1.SelectionCoordinates
	(*CombineCellsRequest)(nil),         // 24: tally.v1.CombineCellsRequest
	(*CombineCellsResponse)(nil),        // 25: tally.v1.CombineCellsResponse
	(*VoteBoardRequest)(nil),            // 26: tally.v1.VoteBoardRequest
	(*VoteBoardResponse)(nil),           // 27: tally.v1.VoteBoardResponse
	(*Game)(nil),                        // 28: tally.v1.Game
	(*Session)(nil),                     // 29: tally.v1.Session
	(*GenerateGameRequest)(nil),         // 30: tally.v1.GenerateGameRequest
	(*GenerateGameResponse)(nil),        // 31: tally.v1.GenerateGameResponse
	(*GetGameChallengesRequest)(nil),    // 32: tally.v1.GetGameChallengesRequest
	(*GetGameChallengesResponse)(nil),   // 33: tally.v1.GetGameChallengesResponse
	(*GameChallenge)(nil),               // 34: tally.v1.GameChallenge
	(*CreateGameChallengeRequest)(nil),  // 35: tally.v1.CreateGameChallengeRequest
	(*CreateGameChallengeResponse)(nil), // 36: tally.v1.CreateGameChallengeResponse
}
var file_proto_tally_v1_board_proto_depIdxs = []int32{
	10, // 0: tally.v1.InternalDataHistory.instruction:type_name -> tally.v1.Instruction
	6,  // 1: tally.v1.Board.cells:type_name -> tally.v1.Cell
	0,  // 2: tally.v1.Instruction.swipe:type_name -> tally.v1.SwipeDirection
	22, // 3: tally.v1.Instruction.combine:type_name -> tally.v1.Indexes
	3,  // 4: tally.v1.GetHintRequest.hint_preference:type_name -> tally.v1.HintPreference
	10, // 5: tally.v1.GetHintResponse.instructions:type_name -> tally.v1.Instruction
	1,  // 6: tally.v1.NewGameRequest.mode:type_name -> tally.v1.GameMode
	2,  // 7: tally.v1.NewGameRequest.difficulty:type_name -> tally.v1.Difficulty
	9,  // 8: tally.v1.RestartGameResponse.board:type_name -> tally.v1.Board
	29, // 9: tally.v1.GetSessionResponse.session:type_name -> tally.v1.Session
	9,  // 10: tally.v1.NewGameResponse.board:type_name -> tally.v1.Board
	1,  // 11: tally.v1.NewGameResponse.mode:type_name -> tally.v1.GameMode
	0,  // 12: tally.v1.SwipeBoardRequest.direction:type_name -> tally.v1.SwipeDirection
	9,  // 13: tally.v1.SwipeBoardResponse.board:type_name -> tally.v1.Board
	21, // 14: tally.v1.SelectionCoordinates.coordinate:type_name -> tally.v1.Coordinate
	22, // 15: tally.v1.CombineCellsRequest.indexes:type_name -> tally.v1.Indexes
	21, // 16: tally.v1.CombineCellsRequest.coordinate:type_name -> tally.v1.Coordinate
	9,  // 17: tally.v1.CombineCellsResponse.board:type_name -> tally.v1.Board
	4,  // 18: tally.v1.VoteBoardRequest.fun_vote:type_name -> tally.v1.Vote
	4,  // 19: tally.v1.VoteBoardResponse.fun_vote:type_name -> tally.v1.Vote
	9,  // 20: tally.v1.Game.board:type_name -> tally.v1.Board
	1,  // 21: tally.v1.Game.mode:type_name -> tally.v1.GameMode
	28, // 22: tally.v1.Session.game:type_name -> tally.v1.Game
	5,  // 23: tally.v1.GenerateGameRequest.algorithm:type_name -> tally.v1.GeneratorAlgorithm
	28, // 24: tally.v1.GenerateGameResponse.game:type_name -> tally.v1.Game
	28, // 25: tally.v1.GenerateGameResponse.solutions:type_name -> tally.v1.Game
	34, // 26: tally.v1.GetGameChallengesResponse.challenges:type_name -> tally.v1.GameChallenge
	6,  // 27: tally.v1.GameChallenge.cells:type_name -> tally.v1.Cell
	6,  // 28: tally.v1.CreateGameChallengeRequest.cells:type_name -> tally.v1.Cell
	15, // 29: tally.v1.BoardService.NewGame:input_type -> tally.v1.NewGameRequest
	11, // 30: tally.v1.BoardService.GetHint:input_type -> tally.v1.GetHintRequest
	14, // 31: tally.v1.BoardService.RestartGame:input_type -> tally.v1.RestartGameRequest
	13, // 32: tally.v1.BoardService.GetSession:input_type -> tally.v1.GetSessionRequest
	19, // 33: tally.v1.BoardService.SwipeBoard:input_type -> tally.v1.SwipeBoardRequest
	24, // 34: tally.v1.BoardService.CombineCells:input_type -> tally.v1.CombineCellsRequest
	30, // 35: tally.v1.BoardService.GenerateGame:input_type -> tally.v1.GenerateGameRequest
	26, // 36: tally.v1.BoardService.VoteBoard:input_type -> tally.v1.VoteBoardRequest
	32, // 37: tally.v1.BoardService.GetGameChallenges:input_type -> tally.v1.GetGameChallengesRequest
	35, // 38: tally.v1.BoardService.CreateGameChallenge:input_type -> tally.v1.CreateGameChallengeRequest
	18, // 39: tally.v1.BoardService.NewGame:output_type -> tally.v1.NewGameResponse
	12, // 40: tally.v1.BoardService.GetHint:output_type -> tally.v1.GetHintResponse
	16, // 41: tally.v1.BoardService.RestartGame:output_type -> tally.v1.RestartGameResponse
	17, // 42: tally.v1.BoardService.GetSession:output_type -> tally.v1.GetSessionResponse
	20, // 43: tally.v1.BoardService.SwipeBoard:output_type -> tally.v1.SwipeBoardResponse
	25, // 44: tally.v1.BoardService.CombineCells:output_type -> tally.v1.CombineCellsResponse
	31, // 45: tally.v1.BoardService.GenerateGame:output_type -> tally.v1.GenerateGameResponse
	27, // 46: tally.v1.BoardService.VoteBoard:output_type -> tally.v1.VoteBoardResponse
	33, // 47: tally.v1.BoardService.GetGameChallenges:output_type -> tally.v1.GetGameChallengesResponse
	36, // 48: tally.v1.BoardService.CreateGameChallenge:output_type -> tally.v1.CreateGameChallengeResponse
	39, // [39:49] is the sub-list for method output_type
	29, // [29:39] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_proto_tally_v1_board_proto_init() }
func file_proto_tally_v1_board_proto_init() {
	if File_proto_tally_v1_board_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_tally_v1_board_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalDataHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalDataGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Board); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwipeBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwipeBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Indexes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectionCoordinates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineCellsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineCellsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteBoardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteBoardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameChallengesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameChallengesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tally_v1_board_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_tally_v1_board_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Instruction_Swipe)(nil),
		(*Instruction_Combine)(nil),
		(*Instruction_Bytes)(nil),
	}
	file_proto_tally_v1_board_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*NewGameRequest_Difficulty)(nil),
		(*NewGameRequest_LevelIndex)(nil),
		(*NewGameRequest_Id)(nil),
	}
	file_proto_tally_v1_board_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*CombineCellsRequest_Indexes)(nil),
		(*CombineCellsRequest_Coordinate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_tally_v1_board_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_tally_v1_board_proto_goTypes,
		DependencyIndexes: file_proto_tally_v1_board_proto_depIdxs,
		EnumInfos:         file_proto_tally_v1_board_proto_enumTypes,
		MessageInfos:      file_proto_tally_v1_board_proto_msgTypes,
	}.Build()
	File_proto_tally_v1_board_proto = out.File
	file_proto_tally_v1_board_proto_rawDesc = nil
	file_proto_tally_v1_board_proto_goTypes = nil
	file_proto_tally_v1_board_proto_depIdxs = nil
}
